DBFinancialMarketParticipants_building

AssetsId = fieldnames(DBFinancialAssets);
   
for s=1:numel(AssetsId)
    AssetId = AssetsId{s,1};
    
    if strcmp(Parameters.ClearingMechanism,'ClearingHouse')
        %%% Clearing House clearing mechanism
        if Parameters.prompt_print == 1
    fprintf('\r\r Clearing House market clearing:')
end

[QB, PBLimit, QS, PSLimit]=DBFinancialMarketParticipants_OrdersCollecting(AssetId);
[Pcross, Qcross, Qrationed] = ClearingHouse(QB, PBLimit, QS, PSLimit);
if isnan(Pcross)
    Pcross = asset.prices(current_day-1);
    Qcross = 0;
    Qrationed = 0;
end
if strcmp(asset.class,'stock')
    CashFlow = asset.dividends(current_month);
    CashFlowYield = asset.dividends(current_month)/Pcross;
elseif strcmp(asset.class,'bond')
    CashFlow = asset.NominalYield*asset.FaceValue;
    CashFlowYield = asset.NominalYield*asset.FaceValue/Pcross;
end

if Parameters.prompt_print == 1

    fprintf('\r clearing Price: %3.2f \t Volume: %d \t Qrat: %d \t last cash flow: %2.2f (%2.2f %%)',...
        Pcross,Qcross,Qrationed,CashFlow,100*CashFlowYield)
end

if Qcross>0
    [BuyingTraders, SellingTraders] = ...
        DBFinancialMarketParticipants_AssetsTransactionsRationing(Pcross, Qrationed, AssetId);
    DBFinancialMarketParticipants_AssetsTransactionsAccounting(Pcross, Qcross, BuyingTraders, SellingTraders, AssetId);
end
    elseif strcmp(Parameters.ClearingMechanism,'LimitOrderBook')
        %%% Limit order book clearing mechanism
        AFM_FinancialMarketSession_LimitOrderBook
    else
        error('The market clearing mechanism is unknown')
    end

    DBFinancialAssets.(AssetId).prices(current_day,1)=Pcross;
    DBFinancialAssets.(AssetId).volumes(current_day,1)=Qcross;
    DBFinancialAssets.(AssetId).unbalance(current_day,1)=Qrationed;

    clear QB PBLimit QS PSLimit
    clear Pcross Qcross Qrationed
    clear BuyingTraders SellingTraders

end

DBFinancialMarketParticipants_retrieving_data